# Defines the deployment for the alfresco share app
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "content-services.shortname" . }}-share
  labels:
    {{- include "share.labels" . | nindent 4 }}
  annotations:
    checkov.io/skip1: CKV_K8S_23=Requires APPS-1832 first
    checkov.io/skip2: CKV_K8S_40=Requires APPS-1832 first
spec:
  replicas: {{ .Values.share.replicaCount }}
  selector:
    matchLabels:
      {{- include "share.selectorLabels" . | nindent 6 }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
{{ toYaml .Values.global.strategy.rollingUpdate | indent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/config-share.yaml") . | sha256sum }}
      labels:
        {{- include "share.selectorLabels" . | nindent 8 }}
        {{- with .Values.share.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
    {{- include "component-pod-security-context" .Values.share | indent 4 }}
    {{- if .Values.share.nodeSelector }}
      nodeSelector: {{- .Values.share.nodeSelector | toYaml | nindent 8 }}
    {{- end }}
      {{- include "alfresco-content-services.imagePullSecrets" . | indent 6 }}
      containers:
        {{- if .Values.share.extraSideContainers }}
{{ tpl .Values.share.extraSideContainers . | indent 8 }}
        {{- end }}
        - name: {{ .Chart.Name }}
          image: "{{ .Values.share.image.repository }}:{{ .Values.share.image.tag }}"
          imagePullPolicy: {{ .Values.share.image.pullPolicy }}
          {{- include "component-security-context" .Values.share | indent 8 }}
          {{- if .Values.share.command }}
          command:
{{ tpl .Values.share.command . | indent 12 }}
          {{- end }}
          ports:
            - containerPort: {{ .Values.share.image.internalPort }}
          resources: {{- toYaml .Values.share.resources | nindent 12 }}
          env:
          {{- if and (.Values.global.elasticAPM) (.Values.global.elasticAPM.enabled) }}
          - name: ELASTIC_APM_SERVER_URLS
            value: {{ .Values.global.elasticAPM.containers.env.serverUrls}}
          - name: ELASTIC_APM_SERVICE_NAME
            value: "share"
          - name: ELASTIC_APM_APPLICATION_PACKAGES
            value: com.alfresco,org.alfresco,nl.amsterdam
          - name: ELASTIC_APM_ENVIRONMENT
            value: {{ .Values.global.elasticAPM.containers.env.environment }}
          - name: ELASTIC_APM_LOG_LEVEL
            value: {{ .Values.global.elasticAPM.containers.env.logLevel }}
          - name: ELASTIC_APM_SECRET_TOKEN
            valueFrom:
              secretKeyRef:
                name: {{ .Values.global.elasticAPM.containers.env.secretToken.name}}
                key: {{ .Values.global.elasticAPM.containers.env.secretToken.key }}
          - name: JAVA_TOOL_OPTIONS
            value: {{ .Values.global.elasticAPM.containers.env.javaToolOptions }}
          {{- end }}
          envFrom:
          - configMapRef:
              name: {{ template "content-services.shortname" . }}-share-configmap
          {{- if .Values.share.extraVolumeMounts }}
          volumeMounts:
{{ toYaml .Values.share.extraVolumeMounts | indent 10 }}
          {{- if and (.Values.global.elasticAPM) (.Values.global.elasticAPM.enabled) }}
            - name: {{ .Values.global.elasticAPM.containers.volumeMounts.name }}
              mountPath: {{ .Values.global.elasticAPM.containers.volumeMounts.mountPath }}
          {{- end }}
          {{- end }}
          readinessProbe:
            httpGet:
              path: /share
              port: {{ .Values.share.image.internalPort }}
            initialDelaySeconds: {{ .Values.share.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.share.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.share.readinessProbe.timeoutSeconds }}
          livenessProbe:
            httpGet:
              path: /share
              port: {{ .Values.share.image.internalPort }}
            initialDelaySeconds: {{ .Values.share.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.share.livenessProbe.periodSeconds }}
            failureThreshold: 1
            timeoutSeconds: {{ .Values.share.livenessProbe.timeoutSeconds }}
          lifecycle:
            preStop:
              exec:
                command: ["/bin/bash", "-c", "sleep 20"]
      initContainers:
      {{- if .Values.share.extraInitContainers }}
{{ tpl .Values.share.extraInitContainers . | indent 8 }}
      {{- end }}
      {{- if and (.Values.global.elasticAPM) (.Values.global.elasticAPM.enabled) }}
        - name: elastic-java-agent
          image: {{ .Values.global.elasticAPM.initContainers.image }}
          volumeMounts:
          - mountPath: {{ .Values.global.elasticAPM.initContainers.volumeMounts.mountPath }}
            name: {{ .Values.global.elasticAPM.initContainers.volumeMounts.name }}
          command: ['cp', '-v', '/usr/agent/elastic-apm-agent.jar', '/elastic/apm/agent']
      {{- end }}
      volumes:
      {{- if .Values.share.extraVolumes }}
{{ toYaml .Values.share.extraVolumes | indent 6 }}
      {{- end }}
      {{- if and (.Values.global.elasticAPM) (.Values.global.elasticAPM.enabled) }}
      - name: elastic-apm-agent
        emptyDir: {}
      {{- end }}
      
