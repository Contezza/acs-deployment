# Defines the deployment for the shared file store
# Details: https://git.alfresco.com/Repository/alfresco-shared file store
{{- if eq .Values.repository.edition "Enterprise" }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "alfresco.shortname" . }}-filestore
  labels:
    {{- include "filestore.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.filestore.replicaCount }}
  selector:
    matchLabels:
      {{- include "filestore.selectorLabels" . | nindent 6 }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
{{ toYaml .Values.global.strategy.rollingUpdate | indent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/config-filestore.yaml") . | sha256sum }}
        {{- with .Values.filestore.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "filestore.selectorLabels" . | nindent 8 }}
        {{- with .Values.filestore.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
    {{- include "component-pod-security-context" .Values.filestore | indent 4 }}
    {{- if .Values.filestore.nodeSelector }}
      nodeSelector: {{- .Values.filestore.nodeSelector | toYaml | nindent 8 }}
    {{- end }}
      {{- include "alfresco-content-services.imagePullSecrets" . | indent 6 }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 10
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - {{ template "alfresco.shortname" . }}-filestore
              topologyKey: failure-domain.beta.kubernetes.io/zone
          - weight: 5
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - {{ template "alfresco.shortname" . }}-filestore
              topologyKey: kubernetes.io/hostname
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.filestore.image.repository }}:{{ .Values.filestore.image.tag }}"
          imagePullPolicy: {{ .Values.filestore.image.pullPolicy }}
          {{- if and (.Values.global.elasticAPM) (.Values.global.elasticAPM.enabled) }}
          env:
          - name: ELASTIC_APM_SERVER_URLS
            value: {{ .Values.global.elasticAPM.containers.env.serverUrls }}
          - name: ELASTIC_APM_SERVICE_NAME
            value: "filestore"
          - name: ELASTIC_APM_APPLICATION_PACKAGES
            value: com.alfresco,org.alfresco,nl.amsterdam,org.springframework
          - name: ELASTIC_APM_ENVIRONMENT
            value: {{ .Values.global.elasticAPM.containers.env.environment }}
          - name: ELASTIC_APM_LOG_LEVEL
            value: {{ .Values.global.elasticAPM.containers.env.logLevel }}
          - name: ELASTIC_APM_SECRET_TOKEN
            valueFrom:
              secretKeyRef:
                name: {{ .Values.global.elasticAPM.containers.env.secretToken.name }}
                key: {{ .Values.global.elasticAPM.containers.env.secretToken.key }}
          - name: JAVA_TOOL_OPTIONS
            value: {{ .Values.global.elasticAPM.containers.env.javaToolOptions }}
          {{- end }}
          {{- include "component-security-context" .Values.filestore | indent 8 }}
          envFrom:
          - configMapRef:
              # config map to use, defined in config-filestore.yaml
              name: {{ template "alfresco.shortname" . }}-filestore-configmap
          ports:
            - containerPort: {{ .Values.filestore.image.internalPort }}
          resources: {{- toYaml .Values.filestore.resources | nindent 12 }}
          readinessProbe:
            httpGet:
              path: /ready
              port: {{ .Values.filestore.image.internalPort }}
            initialDelaySeconds: {{ .Values.filestore.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.filestore.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.filestore.readinessProbe.timeoutSeconds }}
          livenessProbe:
            httpGet:
              path: /live
              port: {{ .Values.filestore.image.internalPort }}
            initialDelaySeconds: {{ .Values.filestore.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.filestore.livenessProbe.periodSeconds }}
            failureThreshold: 1
            timeoutSeconds: {{ .Values.filestore.livenessProbe.timeoutSeconds }}
          volumeMounts:
            - name: data
              mountPath: {{ .Values.filestore.persistence.data.mountPath }}
              subPath: {{ .Values.filestore.persistence.data.subPath }}
            {{- if and (.Values.global.elasticAPM) (.Values.global.elasticAPM.enabled) }}
            - name: {{ .Values.global.elasticAPM.containers.volumeMounts.name }}
              mountPath: {{ .Values.global.elasticAPM.containers.volumeMounts.mountPath }}
            {{- end }}
      {{- if and (.Values.global.elasticAPM) (.Values.global.elasticAPM.enabled) }}
      initContainers:
        - name: elastic-java-agent
          image: {{ .Values.global.elasticAPM.initContainers.image }}
          volumeMounts:
          - mountPath: {{ .Values.global.elasticAPM.initContainers.volumeMounts.mountPath }}
            name: {{ .Values.global.elasticAPM.initContainers.volumeMounts.name }}
          command: ['cp', '-v', '/usr/agent/elastic-apm-agent.jar', '/elastic/apm/agent']
      {{- end }}
      volumes:
      {{- include "data_volume" .Values.filestore | nindent 8 }}
      {{- if and (.Values.global.elasticAPM) (.Values.global.elasticAPM.enabled) }}
      - name: elastic-apm-agent
        emptyDir: {}
      {{- end }}
{{- end }}
